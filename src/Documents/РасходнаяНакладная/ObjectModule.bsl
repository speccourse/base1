
Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ОстаткиТоваров.Записывать = Истина;

#Область ДЗ_4 
	Движения.Взаиморасчеты.Записывать = Истина;
	Движение = Движения.Взаиморасчеты.ДобавитьПриход();
	Движение.Контрагент = Контрагент;
	Движение.Сумма = СуммаИтого;
	Движение.Период = Дата; 
#КонецОбласти 
			
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяТовары.Номенклатура,
	|	СУММА(РасходнаяНакладнаяТовары.Количество) КАК Количество,
	|	СУММА(РасходнаяНакладнаяТовары.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ДокТЧ
	|ИЗ
	|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
	|ГДЕ
	|	РасходнаяНакладнаяТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокТЧ.Номенклатура,
	|	ДокТЧ.Количество
	|ИЗ
	|	ДокТЧ КАК ДокТЧ";	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = Выборка.Количество;
	КонецЦикла;
	
	Движения.ОстаткиТоваров.БлокироватьДляИзменения = Истина;
	
	Движения.Записать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиТоваровОстатки.Номенклатура,
	|	ОстаткиТоваровОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ОстаткиТоваров.Остатки(
	|			&МоментВремени,
	|			Склад = &Склад
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ДокТЧ.Номенклатура
	|					ИЗ
	|						ДокТЧ КАК ДокТЧ)) КАК ОстаткиТоваровОстатки
	|ГДЕ
	|	ОстаткиТоваровОстатки.КоличествоОстаток < 0";
	
	Граница = Новый Граница(МоментВремени(), ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("МоментВремени", Граница);
	Запрос.УстановитьПараметр("Склад", Склад);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
		     Сообщить("Мало товара " + Выборка.Номенклатура + ", нужно еще " + (-Выборка.КоличествоОстаток));
		КонецЦикла;  
	КонецЕсли; 	
//====================================================================================================================== 	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 	
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СтоимостьТоваров");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();  
	
	Движения.СтоимостьТоваров.БлокироватьДляИзменения = Истина;
	
	//Если Режим = РежимПроведенияДокумента.Оперативный Тогда
	Движения.СтоимостьТоваров.Записать();
	//КонецЕсли; 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтоимостьТоваровОстатки.Номенклатура,
	|	СтоимостьТоваровОстатки.Партия,
	|	СтоимостьТоваровОстатки.КоличествоОстаток,
	|	СтоимостьТоваровОстатки.СтоимостьОстаток
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.СтоимостьТоваров.Остатки(
	|			&МоментВремени,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					ДокТЧ.Номенклатура
	|				ИЗ
	|					ДокТЧ КАК ДокТЧ)) КАК СтоимостьТоваровОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокТЧ.Номенклатура КАК Номенклатура,
	|	ДокТЧ.Количество КАК Количество,
	|   ДокТЧ.Сумма КАК Выручка, 
	|	Остатки.Партия,
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	Остатки.СтоимостьОстаток
	|ИЗ
	|	ДокТЧ КАК ДокТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ДокТЧ.Номенклатура = Остатки.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Остатки.Партия.МоментВремени //FIFO
	|ИТОГИ
	|	МИНИМУМ(Количество),
	|   МИНИМУМ(Выручка), 
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени() ); 
	Результат = Запрос.Выполнить();
	ВыборкаТовар = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаТовар.Следующий() Цикл
		Если ВыборкаТовар.КоличествоОстаток < ВыборкаТовар.Количество Тогда
			Сообщить("Что-то пошло не так, остаток стоимости не совпадает с остатками по складу");
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
		
		ВыборкаПартия = ВыборкаТовар.Выбрать();
		
		ОсталосьСписать = ВыборкаТовар.Количество;
		СебестоимостьИтого = 0;
		
		Пока ВыборкаПартия.Следующий() И ОсталосьСписать <> 0 Цикл
			
			Списать = МИН(ОсталосьСписать, ВыборкаПартия.КоличествоОстаток);
			
			Себестоимость = Списать / ВыборкаПартия.КоличествоОстаток * ВыборкаПартия.СтоимостьОстаток;
			СебестоимостьИтого = СебестоимостьИтого + Себестоимость;
			
			Движение = Движения.СтоимостьТоваров.ДобавитьРасход();
			Движение.Период = Дата; 
			Движение.Номенклатура = ВыборкаПартия.Номенклатура;
			Движение.Партия = ВыборкаПартия.Партия;
			Движение.Количество = Списать;
			Движение.Стоимость = Себестоимость;
			
			ОсталосьСписать = ОсталосьСписать - Списать;
		КонецЦикла; 
		
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата; 
		Движение.Номенклатура = ВыборкаТовар.Номенклатура;
		Движение.Контрагент = Контрагент;
		Движение.Количество = ВыборкаТовар.Количество;
		Движение.Себестоимость = СебестоимостьИтого;
		Движение.Выручка = ВыборкаТовар.Выручка;		
		
	КонецЦикла;  
	
Если ВидСписания = 0 Тогда
	
#Область Бух

	Движения.РегистрБухгалтерии.Записать(); //Очищаем регистр бухгалтерии

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокТЧ.Номенклатура КАК Номенклатура,
	|	ДокТЧ.Количество КАК Количество, 
	|	ДокТЧ.Сумма КАК Сумма,
	|	РегистрБухгалтерииОстатки.СуммаОстаток КАК СуммаОстаток,	
	|	РегистрБухгалтерииОстатки.УпрСуммаОстаток КАК УпрСуммаОстаток,
	|	ISNULL(РегистрБухгалтерииОстатки.КоличествоОстаток,0) КАК КоличествоОстаток
	|ИЗ
	|	ДокТЧ КАК ДокТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.РегистрБухгалтерии.Остатки(
	|				&МоментВремени,
	|				Счет = &Счет,
	|				&МассивСубконто,
	|				Субконто1 В
	|						(ВЫБРАТЬ
	|							ДокТЧ.Номенклатура
	|						ИЗ
	|							ДокТЧ КАК ДокТЧ)
	|					И Субконто2 = &Склад) КАК РегистрБухгалтерииОстатки
	|		ПО ДокТЧ.Номенклатура = РегистрБухгалтерииОстатки.Субконто1";
	
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.ПланСчетов.Товары);
	Массив = Новый Массив(2);
	Массив [0] = ПланыВидовХарактеристик.ВидыСубконто.Номенклатура;
	Массив [1] = ПланыВидовХарактеристик.ВидыСубконто.Склады;
	Запрос.УстановитьПараметр("МассивСубконто", Массив);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
   
	Пока Выборка.Следующий() Цикл
		
		//Сообщить("Остатки по БУХ: " + Выборка.КоличествоОстаток);
		Если Выборка.Количество > Выборка.КоличествоОстаток Тогда
			Сообщить("Мало товара");
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли; 
		
		Себестоимость = Выборка.Количество / Выборка.КоличествоОстаток * Выборка.СуммаОстаток;
		УпрСебестоимость = Выборка.Количество / Выборка.КоличествоОстаток * Выборка.УпрСуммаОстаток;
		
		//Списание товаров (себестоимость)
		Проводка = Движения.РегистрБухгалтерии.Добавить();
		Проводка.Период = Дата;
		Проводка.СчетДт = ПланыСчетов.ПланСчетов.Прибыль; 
		Проводка.СчетКт = ПланыСчетов.ПланСчетов.Товары; 
		Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад; 
		Проводка.КоличествоКт = Выборка.Количество;
		Проводка.Сумма = Себестоимость;
		Проводка.УпрСумма = УпрСебестоимость;
		
		Курс = ВозвращаемыеЗначения.ПолучитьКурсУпрВалюты(НачалоДня(Дата));
		
		//Регистрация долга покупателя
		Проводка = Движения.РегистрБухгалтерии.Добавить();
		Проводка.Период = Дата;
		Проводка.СчетДт = ПланыСчетов.ПланСчетов.Покупатели; 
		Проводка.СчетКт = ПланыСчетов.ПланСчетов.Прибыль; 
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент; 
		Проводка.Сумма = Выборка.Сумма;
		Проводка.УпрСумма = Выборка.Сумма / Курс;
	КонецЦикла;

#КонецОбласти

	ИНАЧЕ
#Область БухОПТ

	Движения.РегистрБухгалтерии.Записать(); //Очищаем регистр бухгалтерии

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокТЧ.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ДокТЧ.Количество) КАК Количество,
	|	МАКСИМУМ(ДокТЧ.Сумма) КАК Сумма,
	|	СУММА(РегистрБухгалтерииОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(РегистрБухгалтерииОстатки.УпрСуммаОстаток) КАК УпрСуммаОстаток,
	|	СУММА(РегистрБухгалтерииОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ВЫБОР
	|			КОГДА РегистрБухгалтерииОстатки.Субконто2 = &Склад
	|				ТОГДА РегистрБухгалтерииОстатки.КоличествоОстаток
	|		КОНЕЦ) КАК ОстатоКПоСкладу
	|ИЗ
	|	ДокТЧ КАК ДокТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.РегистрБухгалтерии.Остатки(
	|				&МоментВремени,
	|				Счет = &Счет,
	|				&МассивСубконто,
	|				Субконто1 В
	|					(ВЫБРАТЬ
	|						ДокТЧ.Номенклатура
	|					ИЗ
	|						ДокТЧ КАК ДокТЧ)) КАК РегистрБухгалтерииОстатки
	|		ПО ДокТЧ.Номенклатура = РегистрБухгалтерииОстатки.Субконто1
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокТЧ.Номенклатура";
	
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.ПланСчетов.ТоварыОпт);
	Массив = Новый Массив(2);
	Массив [0] = ПланыВидовХарактеристик.ВидыСубконто.Номенклатура;
	Массив [1] = ПланыВидовХарактеристик.ВидыСубконто.Склады;
	Запрос.УстановитьПараметр("МассивСубконто", Массив);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		//Сообщить("Остатки по БУХ: " + Выборка.КоличествоОстаток);
		Если Выборка.Количество > Выборка.ОстатоКПоСкладу Тогда
			Сообщить("Мало товара");
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли; 
		
		Себестоимость = Выборка.Количество / Выборка.КоличествоОстаток * Выборка.СуммаОстаток;
		УпрСебестоимость = Выборка.Количество / Выборка.КоличествоОстаток * Выборка.УпрСуммаОстаток;
		
		//Списание товаров (себестоимость)
		Проводка = Движения.РегистрБухгалтерии.Добавить();
		Проводка.Период = Дата;
		Проводка.СчетДт = ПланыСчетов.ПланСчетов.Прибыль; 
		Проводка.СчетКт = ПланыСчетов.ПланСчетов.Товары; 
		Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад; 
		Проводка.КоличествоКт = Выборка.Количество;
		Проводка.Сумма = Себестоимость;
		Проводка.УпрСумма = УпрСебестоимость;
		
		Курс = ВозвращаемыеЗначения.ПолучитьКурсУпрВалюты(НачалоДня(Дата));
		
		//Регистрация долга покупателя
		Проводка = Движения.РегистрБухгалтерии.Добавить();
		Проводка.Период = Дата;
		Проводка.СчетДт = ПланыСчетов.ПланСчетов.Покупатели; 
		Проводка.СчетКт = ПланыСчетов.ПланСчетов.Прибыль; 
		Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент; 
		Проводка.Сумма = Выборка.Сумма;
		Проводка.УпрСумма = Выборка.Сумма / Курс;

		
	КонецЦикла;
	
#КонецОбласти
	
КонецЕсли; 	

	Движения.РегистрБухгалтерии.Записывать = Истина;
	Движения.СтоимостьТоваров.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаИтого = Товары.Итог("Сумма");
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СчетНаОплату") Тогда
		// Заполнение шапки
		Контрагент = ДанныеЗаполнения.Контрагент;
		Склад = ДанныеЗаполнения.Склад;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
			НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

